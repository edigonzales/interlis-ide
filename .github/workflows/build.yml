name: Build, package and test

on:
  push:
    branches:
      - master
  workflow_dispatch:
  # pull_request:
  #   branches:
  #     - master

jobs:
  build:
    name: ${{ matrix.os }}, Node.js v${{ matrix.node }}

    env:
      BUILD_NUMBER: ${{ github.run_number }}

    strategy:
      fail-fast: false
      matrix:
        #os: [windows-2022, ubuntu-22.04, ubuntu-22.04-arm, macos-13, macos-14] # macOS-13 is for x64, macOS-14 is for arm64
        #os: [ubuntu-22.04, macos-14]
        #os: [windows-2022, ubuntu-22.04, macos-13, macos-14]
        os: [ubuntu-22.04-arm]
        node: ["22.x"]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0 # To fetch all history for all branches and tags. (Will be required for caching with lerna: https://github.com/markuplint/markuplint/pull/111)

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3.8.2
        with:
          node-version: ${{ matrix.node }}
          registry-url: "https://registry.npmjs.org"
          cache: 'yarn'

      - name: Use Python 3.13
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.13'
  
      - name: Build prod package 
        if: runner.os != 'Linux' || runner.arch != 'ARM64'
        shell: bash
        run: |
          yarn --skip-integrity-check --network-timeout 100000
          yarn electron build 
          yarn download:plugins
          yarn electron package:prod
        env:
          NODE_OPTIONS: --max-old-space-size=4096
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build prod package (Linux ARM)
        if: runner.os == 'Linux' && runner.arch == 'ARM64'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev build-essential rpm
          sudo gem install --no-document fpm
          yarn --skip-integrity-check --network-timeout 100000
          yarn electron build 
          yarn download:plugins
          yarn electron package:prod
        env:
          NODE_OPTIONS: --max-old-space-size=4096
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USE_SYSTEM_FPM: "true"

      - name: Upload Mac Dist Files
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 #4.6.1
        with:
          name: ${{ matrix.os == 'macos-13' && 'mac-x64' || matrix.os == 'macos-14' && 'mac-arm64'}}
          path: |
            applications/electron/dist/**
            !applications/electron/dist/mac/**
            !applications/electron/dist/mac-arm64/**
          #retention-days: 1

      - name: Upload Windows Dist Files
        if: runner.os == 'Windows' 
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 #4.6.1
        with:
          name: windows
          path: |
            applications/electron/dist/**
          #retention-days: 1

      - name: Upload Linux Dist Files
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 #4.6.1
        with:
          name: ${{ matrix.os == 'ubuntu-22.04' && 'linux-x64' || matrix.os == 'ubuntu-22.04-arm' && 'linux-arm64'}}
          path: |
            applications/electron/dist/**
          #retention-days: 1
